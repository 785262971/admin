<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="zp_test.springboot_server.zp.dao.TestEntityMapper" >
  <resultMap id="BaseResultMap" type="zp_test.springboot_server.zp.entity.TestEntity" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon May 21 18:24:25 CST 2018.
    -->
    <id column="t_test_id" property="id" jdbcType="VARCHAR" />
    <result column="t_test_test1" property="test1" jdbcType="VARCHAR" />
    <result column="t_test_test2" property="test2" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon May 21 18:24:25 CST 2018.
    -->
    t_test.id as t_test_id, t_test.test1 as t_test_test1, t_test.test2 as t_test_test2
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon May 21 18:24:25 CST 2018.
    -->
    select 
    <include refid="Base_Column_List" />
    from t_test t_test
    where t_test.id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon May 21 18:24:25 CST 2018.
    -->
    delete from t_test
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="zp_test.springboot_server.zp.entity.TestEntity" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon May 21 18:24:25 CST 2018.
    -->
    insert into t_test (id, test1, test2
      )
    values (#{id,jdbcType=VARCHAR}, #{test1,jdbcType=VARCHAR}, #{test2,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="zp_test.springboot_server.zp.entity.TestEntity" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon May 21 18:24:25 CST 2018.
    -->
    insert into t_test
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="test1 != null" >
        test1,
      </if>
      <if test="test2 != null" >
        test2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="test1 != null" >
        #{test1,jdbcType=VARCHAR},
      </if>
      <if test="test2 != null" >
        #{test2,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="zp_test.springboot_server.zp.entity.TestEntity" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon May 21 18:24:25 CST 2018.
    -->
    update t_test
    <set >
      <if test="test1 != null" >
        test1 = #{test1,jdbcType=VARCHAR},
      </if>
      <if test="test2 != null" >
        test2 = #{test2,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="zp_test.springboot_server.zp.entity.TestEntity" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon May 21 18:24:25 CST 2018.
    -->
    update t_test
    set test1 = #{test1,jdbcType=VARCHAR},
      test2 = #{test2,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="selectCountByMap" parameterType="map" resultType="int" >
    select count(*) from  <if test="dynamicTableName != null and dynamicTableName != ''"> ${dynamicTableName}  t_test </if><if test="dynamicTableName == null or dynamicTableName == ''"> t_test t_test</if> <include refid="Base_Query_Map_Condition" /> 
  </select>
  <select id="selectListByMap" parameterType="map" resultMap="BaseResultMap" >
    select <include refid="Base_Column_List" /> from  
    <if test="dynamicTableName != null and dynamicTableName != ''">
     ${dynamicTableName}  t_test </if><if test="dynamicTableName == null or dynamicTableName == ''"> 
     t_test t_test</if> <include refid="Base_Query_Map_Condition" /> 
  </select>
  <sql id="Base_Query_Map_Condition" >
    <trim prefix="where" prefixOverrides="and | or" >
      <if test="id != null and id != ''" >
         AND t_test.id = #{id,jdbcType=VARCHAR}
      </if>
      <if test="test1 != null and test1 != ''" >
         AND t_test.test1 = #{test1,jdbcType=VARCHAR}
      </if>
      <if test="test2 != null and test2 != ''" >
         AND t_test.test2 = #{test2,jdbcType=VARCHAR}
      </if>
      <if test="myNotEqual_id != null and myNotEqual_id != ''" >
         AND t_test.id != #{myNotEqual_id,jdbcType=VARCHAR}
      </if>
      <if test="myNotEqual_test1 != null and myNotEqual_test1 != ''" >
         AND t_test.test1 != #{myNotEqual_test1,jdbcType=VARCHAR}
      </if>
      <if test="myNotEqual_test2 != null and myNotEqual_test2 != ''" >
         AND t_test.test2 != #{myNotEqual_test2,jdbcType=VARCHAR}
      </if>
      <if test="myGreater_id != null and myGreater_id != ''" >
         AND t_test.id &gt; #{myGreater_id,jdbcType=VARCHAR}
      </if>
      <if test="myGreater_test1 != null and myGreater_test1 != ''" >
         AND t_test.test1 &gt; #{myGreater_test1,jdbcType=VARCHAR}
      </if>
      <if test="myGreater_test2 != null and myGreater_test2 != ''" >
         AND t_test.test2 &gt; #{myGreater_test2,jdbcType=VARCHAR}
      </if>
      <if test="myLesser_id != null and myLesser_id != ''" >
         AND t_test.id &lt; #{myLesser_id,jdbcType=VARCHAR}
      </if>
      <if test="myLesser_test1 != null and myLesser_test1 != ''" >
         AND t_test.test1 &lt; #{myLesser_test1,jdbcType=VARCHAR}
      </if>
      <if test="myLesser_test2 != null and myLesser_test2 != ''" >
         AND t_test.test2 &lt; #{myLesser_test2,jdbcType=VARCHAR}
      </if>
      <if test="myLike_id != null and myLike_id != ''" >
         AND t_test.id like CONCAT('%', #{myLike_id,jdbcType=VARCHAR},'%' )
      </if>
      <if test="myLike_test1 != null and myLike_test1 != ''" >
         AND t_test.test1 like CONCAT('%', #{myLike_test1,jdbcType=VARCHAR},'%' )
      </if>
      <if test="myLike_test2 != null and myLike_test2 != ''" >
         AND t_test.test2 like CONCAT('%', #{myLike_test2,jdbcType=VARCHAR},'%' )
      </if>
      <if test="myLikeStart_id != null and myLikeStart_id != ''" >
         AND t_test.id like CONCAT('%', #{myLikeStart_id,jdbcType=VARCHAR})
      </if>
      <if test="myLikeStart_test1 != null and myLikeStart_test1 != ''" >
         AND t_test.test1 like CONCAT('%', #{myLikeStart_test1,jdbcType=VARCHAR})
      </if>
      <if test="myLikeStart_test2 != null and myLikeStart_test2 != ''" >
         AND t_test.test2 like CONCAT('%', #{myLikeStart_test2,jdbcType=VARCHAR})
      </if>
      <if test="myLikeEnd_id != null and myLikeEnd_id != ''" >
         AND t_test.id like CONCAT( #{myLikeEnd_id,jdbcType=VARCHAR},'%' )
      </if>
      <if test="myLikeEnd_test1 != null and myLikeEnd_test1 != ''" >
         AND t_test.test1 like CONCAT( #{myLikeEnd_test1,jdbcType=VARCHAR},'%' )
      </if>
      <if test="myLikeEnd_test2 != null and myLikeEnd_test2 != ''" >
         AND t_test.test2 like CONCAT( #{myLikeEnd_test2,jdbcType=VARCHAR},'%' )
      </if>
      <if test="myIn_id != null and myIn_id != ''" >
         AND t_test.id in <foreach item="item" index="index" collection="myIn_id" open="(" separator="," close=")"> #{item} </foreach>
      </if>
      <if test="myIn_test1 != null and myIn_test1 != ''" >
         AND t_test.test1 in <foreach item="item" index="index" collection="myIn_test1" open="(" separator="," close=")"> #{item} </foreach>
      </if>
      <if test="myIn_test2 != null and myIn_test2 != ''" >
         AND t_test.test2 in <foreach item="item" index="index" collection="myIn_test2" open="(" separator="," close=")"> #{item} </foreach>
      </if>
    </trim>
  </sql>
</mapper>